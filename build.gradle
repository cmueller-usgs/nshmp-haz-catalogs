
apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'application'

sourceCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

repositories {
    jcenter()
}

dependencies {
  compile('com.google.guava:guava:26.0-jre') {                                  
    transitive = false                                                          
  }   

  compile 'com.google.code.gson:gson:2.8.5'
}

sourceSets {
  main {
    java {
      srcDirs = ['src/java']
    }
  }
}

mainClassName = 'gov.usgs.earthquake.catalog.CEUSAgridCalc'

ext {
  etcDir = "${projectDir}/etc"
  adaptiveEtcDir = "${etcDir}/adaptive"
  
  exeDir = "${buildDir}/exe"
  adaptiveExePath = "${exeDir}/adaptiveAgrid"
  fixedExePath = "${exeDir}/fixedAgrid"
  
  agridPropsPath = "${sourceSets.main.java.getOutputDir()}/gov/usgs/earthquake/catalog/config.properties"
}

jar {
  from {
    configurations.compile.collect {
      it.isDirectory() ? it : zipTree(it)
    }
  }

  doFirst {
    CheckPath.checkPath(etcDir)
    CheckPath.checkPath(adaptiveEtcDir)

    def props = new Properties();
    def propsFile = new File(agridPropsPath) 
    propsFile.createNewFile()

    props.setProperty('adaptiveEtcDir', adaptiveEtcDir)
    props.setProperty('adaptiveExe', adaptiveExePath)
    props.setProperty('fixedExe', fixedExePath)

    props.store(propsFile.newWriter(), null)
  }
}

task make(type: Exec) {
  commandLine 'make'

  doLast {
    CheckPath.checkPath(adaptiveExePath)
    CheckPath.checkPath(fixedExePath)
  }
}

assemble.dependsOn make

class CheckPath {

  static void checkPath(String path) {
    Boolean fileExists = new File(path).exists();

    if (!fileExists) {
      throw new FileNotFoundException("Path not found [${path}]")
    }
  }
}
